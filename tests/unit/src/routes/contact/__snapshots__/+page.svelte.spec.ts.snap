// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Contact Page > HTML > should match snapshot 1`] = `
<div>
  <div
    class="w-full max-w-full h-fit flex flex-col justify-center items-center bg-slate-100"
  >
    <div
      class="w-full lg:w-9/12 bg-white py-6 mb-0 lg:my-5"
    >
      <p
        class="title text-2xl text-center font-light svelte-1sglhln"
      >
        Contactez-nous
      </p>
       
      <div
        class="w-full h-full flex flex-col md:flex-row"
      >
        <div
          class="w-full md:w-1/2 h-full flex flex-col justify-center items-center py-6 sm:py-14 gap-6"
        >
          <div
            class="w-10/12 md:w-9/12 h-full flex flex-col gap-4"
          >
            <h4
              class="text-xl uppercase"
            >
              Où nous trouver
            </h4>
             
            <div
              class="h-96 bg-slate-100"
            />
          </div>
           
          <div
            class="w-10/12 md:w-9/12 flex flex-col gap-4"
          >
            <h4
              class="text-xl uppercase"
            >
              Coordonnées
            </h4>
             
            <div
              class="flex flex-col gap-2"
            >
              <div
                class="w-full md:w-7/12 text-md font-light"
              >
                function(...s) {
    let r = A(t);
    r.called = !0, r.callCount++, r.calls.push(s);
    let m = r.next.shift();
    if (m) {
      r.results.push(m);
      let [l, o] = m;
      if (l === "ok")
        return o;
      throw o;
    }
    let p, d = "ok";
    if (r.impl)
      try {
        new.target ? p = Reflect.construct(r.impl, s, new.target) : p = r.impl.apply(this, s), d = "ok";
      } catch (l) {
        throw p = l, d = "error", r.results.push([d, l]), l;
      }
    let a = [d, p];
    if (b(p)) {
      let l = p.then((o) =&gt; a[1] = o).catch((o) =&gt; {
        throw a[0] = "error", a[1] = o, o;
      });
      Object.assign(l, p), p = l;
    }
    return r.results.push(a), p;
  }
              </div>
               
              <div
                class="w-full md:w-7/12 text-md font-light"
              >
                function(...s) {
    let r = A(t);
    r.called = !0, r.callCount++, r.calls.push(s);
    let m = r.next.shift();
    if (m) {
      r.results.push(m);
      let [l, o] = m;
      if (l === "ok")
        return o;
      throw o;
    }
    let p, d = "ok";
    if (r.impl)
      try {
        new.target ? p = Reflect.construct(r.impl, s, new.target) : p = r.impl.apply(this, s), d = "ok";
      } catch (l) {
        throw p = l, d = "error", r.results.push([d, l]), l;
      }
    let a = [d, p];
    if (b(p)) {
      let l = p.then((o) =&gt; a[1] = o).catch((o) =&gt; {
        throw a[0] = "error", a[1] = o, o;
      });
      Object.assign(l, p), p = l;
    }
    return r.results.push(a), p;
  }
              </div>
               
              <div
                class="w-full md:w-7/12 text-md font-light"
              >
                function(...s) {
    let r = A(t);
    r.called = !0, r.callCount++, r.calls.push(s);
    let m = r.next.shift();
    if (m) {
      r.results.push(m);
      let [l, o] = m;
      if (l === "ok")
        return o;
      throw o;
    }
    let p, d = "ok";
    if (r.impl)
      try {
        new.target ? p = Reflect.construct(r.impl, s, new.target) : p = r.impl.apply(this, s), d = "ok";
      } catch (l) {
        throw p = l, d = "error", r.results.push([d, l]), l;
      }
    let a = [d, p];
    if (b(p)) {
      let l = p.then((o) =&gt; a[1] = o).catch((o) =&gt; {
        throw a[0] = "error", a[1] = o, o;
      });
      Object.assign(l, p), p = l;
    }
    return r.results.push(a), p;
  }
              </div>
            </div>
          </div>
           
          <div
            class="w-10/12 md:w-9/12 flex flex-col gap-4"
          >
            <h4
              class="text-xl uppercase"
            >
              Nous sommes ouverts
            </h4>
             
            <div
              class="w-full lg:w-7/12 flex flex-col gap-2"
            >
              <div
                class="w-full flex font-light text-justify"
              >
                <div
                  class="w-7/12"
                >
                  Lundi
                </div>
                 
                <div
                  class="w-5/12 text-end"
                >
                  11:00 - 17:00
                </div>
              </div>
               
            </div>
            
            <div
              class="w-full lg:w-7/12 flex flex-col gap-2"
            >
              <div
                class="w-full flex font-light text-justify"
              >
                <div
                  class="w-7/12"
                >
                  Mardi - Vendredi
                </div>
                 
                <div
                  class="w-5/12 text-end"
                >
                  10:00 - 19:00
                </div>
              </div>
               
            </div>
            
            <div
              class="w-full lg:w-7/12 flex flex-col gap-2"
            >
              <div
                class="w-full flex font-light text-justify"
              >
                <div
                  class="w-7/12"
                >
                  Samedi
                </div>
                 
                <div
                  class="w-5/12 text-end"
                >
                  10:00 - 18:00
                </div>
              </div>
               
            </div>
            
            <div
              class="w-full lg:w-7/12 flex flex-col gap-2"
            >
              <div
                class="w-full flex font-light text-justify"
              >
                <div
                  class="w-7/12"
                >
                  Dimanche
                </div>
                 
                <div
                  class="w-5/12 text-end"
                >
                  11:00 - 17:00
                </div>
              </div>
               
            </div>
            
          </div>
        </div>
         
        <div
          class="w-full md:w-1/2 flex flex-col py-6 sm:py-14 items-center gap-3"
        >
          <div
            class="w-10/12 md:w-9/12 flex flex-col gap-2"
          >
            <h4
              class="text-xl uppercase"
            >
              Prenez contact avec nous !
            </h4>
             
            <p
              class="text-justify font-light"
            >
              Si vous avez des questions ou si vous souhaitez prendre rendez-vous, veuillez utiliser le
                        formulaire de contact ci-dessous ou appelez-nous directement au
                        
              <a
                class="text-blue-600"
                href="tel:function(...s) {
    let r = A(t);
    r.called = !0, r.callCount++, r.calls.push(s);
    let m = r.next.shift();
    if (m) {
      r.results.push(m);
      let [l, o] = m;
      if (l === "ok")
        return o;
      throw o;
    }
    let p, d = "ok";
    if (r.impl)
      try {
        new.target ? p = Reflect.construct(r.impl, s, new.target) : p = r.impl.apply(this, s), d = "ok";
      } catch (l) {
        throw p = l, d = "error", r.results.push([d, l]), l;
      }
    let a = [d, p];
    if (b(p)) {
      let l = p.then((o) => a[1] = o).catch((o) => {
        throw a[0] = "error", a[1] = o, o;
      });
      Object.assign(l, p), p = l;
    }
    return r.results.push(a), p;
  }"
              >
                function(...s) {
    let r = A(t);
    r.called = !0, r.callCount++, r.calls.push(s);
    let m = r.next.shift();
    if (m) {
      r.results.push(m);
      let [l, o] = m;
      if (l === "ok")
        return o;
      throw o;
    }
    let p, d = "ok";
    if (r.impl)
      try {
        new.target ? p = Reflect.construct(r.impl, s, new.target) : p = r.impl.apply(this, s), d = "ok";
      } catch (l) {
        throw p = l, d = "error", r.results.push([d, l]), l;
      }
    let a = [d, p];
    if (b(p)) {
      let l = p.then((o) =&gt; a[1] = o).catch((o) =&gt; {
        throw a[0] = "error", a[1] = o, o;
      });
      Object.assign(l, p), p = l;
    }
    return r.results.push(a), p;
  }
              </a>
              .
            </p>
          </div>
           
          <div
            class="w-10/12 md:w-9/12 flex flex-col gap-3 font-light"
          >
            <div
              class="flex flex-col gap-2"
            >
              <div>
                Name
                <span
                  class="text-red-500"
                >
                  *
                </span>
              </div>
               
              <input
                class="h-10 border-2"
                required=""
                type="text"
              />
            </div>
             
            <div
              class="flex flex-col gap-2"
            >
              <div>
                Email
                <span
                  class="text-red-500"
                >
                  *
                </span>
              </div>
               
              <input
                class="h-10 border-2"
                required=""
                type="email"
              />
            </div>
             
            <div
              class="flex flex-col gap-2"
            >
              <div>
                Sujet
                <span
                  class="text-red-500"
                >
                  *
                </span>
              </div>
               
              <input
                class="h-10 border-2"
                type="text"
              />
            </div>
             
            <div
              class="flex flex-col gap-2"
            >
              <div>
                Message
                <span
                  class="text-red-500"
                >
                  *
                </span>
              </div>
               
              <textarea
                class="border-2"
                required=""
                rows="4"
              />
            </div>
             
            <div
              class="flex justify-end"
            >
              <button
                class="flex justify-around items-center uppercase rounded-sm font-bold w-36 h-12 border border-white shadow-sm mb-2 bg-slate-200  border border-gray-300 text-gray-500"
                data-testid="contact-business-button"
                disabled=""
                id="contact-business-button"
              >
                Envoyer
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
