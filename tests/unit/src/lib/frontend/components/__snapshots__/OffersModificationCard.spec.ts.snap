// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`OffersModificationCard > Structure > should have match snapshot 1`] = `
<body>
  <div>
    <div
      class="w-full bg-white shadow-2xl"
      role="none"
    >
      <div
        class="relative"
      >
        <div
          class="absolute flex w-24 h-24 top-0 text-white items-center visible z-10"
        >
          <svg
            height="100"
            viewBox="0 0 490 490"
            width="100"
            x="0px"
            xml:space="preserve"
            y="0px"
          >
            <polygon
              points="0,0 490,0 0,490"
              style="fill: #ef4444"
            />
          </svg>
           
          <div
            class="absolute -rotate-45 origin-center top-6 right-4 w-full text-[1rem] text-center font-semibold uppercase"
          >
            supprimé
          </div>
        </div>
         
        <img
          alt="ordered-item-name"
          class="w-full aspect-1"
          data-testid="ordered-item-name-offer-preview-image"
          id="ordered-item-name-offer-preview-image"
          src="function(...s) {
    let r = A(t);
    r.called = !0, r.callCount++, r.calls.push(s);
    let m = r.next.shift();
    if (m) {
      r.results.push(m);
      let [l, o] = m;
      if (l === "ok")
        return o;
      throw o;
    }
    let p, d = "ok";
    if (r.impl)
      try {
        new.target ? p = Reflect.construct(r.impl, s, new.target) : p = r.impl.apply(this, s), d = "ok";
      } catch (l) {
        throw p = l, d = "error", r.results.push([d, l]), l;
      }
    let a = [d, p];
    if (b(p)) {
      let l = p.then((o) => a[1] = o).catch((o) => {
        throw a[0] = "error", a[1] = o, o;
      });
      Object.assign(l, p), p = l;
    }
    return r.results.push(a), p;
  }"
        />
      </div>
       
      <div
        class="bottom-0 right-0 w-full flex justify-end"
      >
        <div
          class="filter backdrop-blur-sm bg-green-300/40 font-sans w-full min-h-[4.2rem] justify-between flex items-center text-lg"
          role="region"
        >
          <div
            class="w-8/12 font-light text-xl px-2 text-wrap overflow-hidden text-overflow: ellipsis;"
          >
            ordered-item-name
          </div>
           
          <div
            class="w-4/12 flex flex-row text-xl"
          >
            <span
              class="block"
            >
              $
              10099
               
              <sup>
                00
              </sup>
            </span>
             
            <span
              class="text-m block text-right pr-1"
            >
              <sub>
                / 
                cl
              </sub>
            </span>
          </div>
        </div>
      </div>
    </div>
    <!--&lt;OffersModificationCard&gt;-->
  </div>
</body>
`;

exports[`OffersModificationCard > Structure > when offer modification has "deleted" property set > should match snapshot 1`] = `
<body>
  <div>
    <div
      class="w-full bg-white shadow-2xl"
      role="none"
    >
      <div
        class="relative"
      >
        <div
          class="absolute flex w-24 h-24 top-0 text-white items-center visible z-10"
        >
          <svg
            height="100"
            viewBox="0 0 490 490"
            width="100"
            x="0px"
            xml:space="preserve"
            y="0px"
          >
            <polygon
              points="0,0 490,0 0,490"
              style="fill: #ef4444"
            />
          </svg>
           
          <div
            class="absolute -rotate-45 origin-center top-6 right-4 w-full text-[1rem] text-center font-semibold uppercase"
          >
            supprimé
          </div>
        </div>
         
        <img
          alt="ordered-item-name"
          class="w-full aspect-1"
          data-testid="ordered-item-name-offer-preview-image"
          id="ordered-item-name-offer-preview-image"
          src="function(...s) {
    let r = A(t);
    r.called = !0, r.callCount++, r.calls.push(s);
    let m = r.next.shift();
    if (m) {
      r.results.push(m);
      let [l, o] = m;
      if (l === "ok")
        return o;
      throw o;
    }
    let p, d = "ok";
    if (r.impl)
      try {
        new.target ? p = Reflect.construct(r.impl, s, new.target) : p = r.impl.apply(this, s), d = "ok";
      } catch (l) {
        throw p = l, d = "error", r.results.push([d, l]), l;
      }
    let a = [d, p];
    if (b(p)) {
      let l = p.then((o) => a[1] = o).catch((o) => {
        throw a[0] = "error", a[1] = o, o;
      });
      Object.assign(l, p), p = l;
    }
    return r.results.push(a), p;
  }"
        />
      </div>
       
      <div
        class="bottom-0 right-0 w-full flex justify-end"
      >
        <div
          class="filter backdrop-blur-sm bg-green-300/40 font-sans w-full min-h-[4.2rem] justify-between flex items-center text-lg"
          role="region"
        >
          <div
            class="w-8/12 font-light text-xl px-2 text-wrap overflow-hidden text-overflow: ellipsis;"
          >
            ordered-item-name
          </div>
           
          <div
            class="w-4/12 flex flex-row text-xl"
          >
            <span
              class="block"
            >
              $
              10099
               
              <sup>
                00
              </sup>
            </span>
             
            <span
              class="text-m block text-right pr-1"
            >
              <sub>
                / 
                cl
              </sub>
            </span>
          </div>
        </div>
      </div>
    </div>
    <!--&lt;OffersModificationCard&gt;-->
  </div>
</body>
`;

exports[`OffersModificationCard > Structure > when offer modification has an id but not the "deleted" property set > should match snapshot 1`] = `
<body>
  <div>
    <div
      class="w-full bg-white shadow-2xl"
      role="none"
    >
      <div
        class="relative"
      >
        <div
          class="absolute flex w-24 h-24 top-0 text-white items-center visible z-10"
        >
          <svg
            height="100"
            viewBox="0 0 490 490"
            width="100"
            x="0px"
            xml:space="preserve"
            y="0px"
          >
            <polygon
              points="0,0 490,0 0,490"
              style="fill: #3d83f7"
            />
          </svg>
           
          <div
            class="absolute -rotate-45 origin-center top-6 right-4 w-full text-[1rem] text-center font-semibold uppercase"
          >
            modifié
          </div>
        </div>
         
        <img
          alt="ordered-item-name"
          class="w-full aspect-1"
          data-testid="ordered-item-name-offer-preview-image"
          id="ordered-item-name-offer-preview-image"
          src="function(...s) {
    let r = A(t);
    r.called = !0, r.callCount++, r.calls.push(s);
    let m = r.next.shift();
    if (m) {
      r.results.push(m);
      let [l, o] = m;
      if (l === "ok")
        return o;
      throw o;
    }
    let p, d = "ok";
    if (r.impl)
      try {
        new.target ? p = Reflect.construct(r.impl, s, new.target) : p = r.impl.apply(this, s), d = "ok";
      } catch (l) {
        throw p = l, d = "error", r.results.push([d, l]), l;
      }
    let a = [d, p];
    if (b(p)) {
      let l = p.then((o) => a[1] = o).catch((o) => {
        throw a[0] = "error", a[1] = o, o;
      });
      Object.assign(l, p), p = l;
    }
    return r.results.push(a), p;
  }"
        />
      </div>
       
      <div
        class="bottom-0 right-0 w-full flex justify-end"
      >
        <div
          class="filter backdrop-blur-sm bg-green-300/40 font-sans w-full min-h-[4.2rem] justify-between flex items-center text-lg"
          role="region"
        >
          <div
            class="w-8/12 font-light text-xl px-2 text-wrap overflow-hidden text-overflow: ellipsis;"
          >
            ordered-item-name
          </div>
           
          <div
            class="w-4/12 flex flex-row text-xl"
          >
            <span
              class="block"
            >
              $
              10099
               
              <sup>
                00
              </sup>
            </span>
             
            <span
              class="text-m block text-right pr-1"
            >
              <sub>
                / 
                cl
              </sub>
            </span>
          </div>
        </div>
      </div>
    </div>
    <!--&lt;OffersModificationCard&gt;-->
  </div>
</body>
`;

exports[`OffersModificationCard > Structure > when offer modification has no id and "deleted" undefined > should match snapshot 1`] = `
<body>
  <div>
    <div
      class="w-full bg-white shadow-2xl"
      role="none"
    >
      <div
        class="relative"
      >
        <div
          class="absolute flex w-24 h-24 top-0 text-white items-center visible z-10"
        >
          <svg
            height="100"
            viewBox="0 0 490 490"
            width="100"
            x="0px"
            xml:space="preserve"
            y="0px"
          >
            <polygon
              points="0,0 490,0 0,490"
              style="fill: #09cc4c"
            />
          </svg>
           
          <div
            class="absolute -rotate-45 origin-center top-6 right-4 w-full text-[1rem] text-center font-semibold uppercase"
          >
            ajouté
          </div>
        </div>
         
        <img
          alt="ordered-item-name"
          class="w-full aspect-1"
          data-testid="ordered-item-name-offer-preview-image"
          id="ordered-item-name-offer-preview-image"
          src="function(...s) {
    let r = A(t);
    r.called = !0, r.callCount++, r.calls.push(s);
    let m = r.next.shift();
    if (m) {
      r.results.push(m);
      let [l, o] = m;
      if (l === "ok")
        return o;
      throw o;
    }
    let p, d = "ok";
    if (r.impl)
      try {
        new.target ? p = Reflect.construct(r.impl, s, new.target) : p = r.impl.apply(this, s), d = "ok";
      } catch (l) {
        throw p = l, d = "error", r.results.push([d, l]), l;
      }
    let a = [d, p];
    if (b(p)) {
      let l = p.then((o) => a[1] = o).catch((o) => {
        throw a[0] = "error", a[1] = o, o;
      });
      Object.assign(l, p), p = l;
    }
    return r.results.push(a), p;
  }"
        />
      </div>
       
      <div
        class="bottom-0 right-0 w-full flex justify-end"
      >
        <div
          class="filter backdrop-blur-sm bg-green-300/40 font-sans w-full min-h-[4.2rem] justify-between flex items-center text-lg"
          role="region"
        >
          <div
            class="w-8/12 font-light text-xl px-2 text-wrap overflow-hidden text-overflow: ellipsis;"
          >
            ordered-item-name
          </div>
           
          <div
            class="w-4/12 flex flex-row text-xl"
          >
            <span
              class="block"
            >
              $
              10099
               
              <sup>
                00
              </sup>
            </span>
             
            <span
              class="text-m block text-right pr-1"
            >
              <sub>
                / 
                cl
              </sub>
            </span>
          </div>
        </div>
      </div>
    </div>
    <!--&lt;OffersModificationCard&gt;-->
  </div>
</body>
`;
